openapi: 3.0.3
info:
  title: 물류 관리 시스템 API
  description: 웹 기반 물류 관리 시스템을 위한 RESTful API 명세서
  version: 1.0.0

servers:
  - url: https://api.example.com
    description: Production Server
  - url: http://localhost:3000
    description: Local Development Server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
        role:
          type: string
          enum: [admin, staff, viewer]
        name:
          type: string

    Product:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        sku:
          type: string
        category:
          type: string
        location:
          type: string
        quantity:
          type: integer
        threshold_min:
          type: integer
        threshold_max:
          type: integer

    InventoryLog:
      type: object
      properties:
        id:
          type: string
        product_id:
          type: string
        type:
          type: string
          enum: [inbound, outbound]
        quantity:
          type: integer
        timestamp:
          type: string
          format: date-time
        note:
          type: string

    Alert:
      type: object
      properties:
        id:
          type: string
        product_id:
          type: string
        alert_type:
          type: string
          enum: [low_stock, overstock]
        message:
          type: string
        is_read:
          type: boolean

paths:
  /auth/login:
    post:
      summary: 사용자 로그인
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: 로그인 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'

  /users/me:
    get:
      summary: 현재 사용자 정보
      tags: [Users]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 사용자 정보 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /products:
    get:
      summary: 상품 목록 조회
      tags: [Products]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 상품 리스트 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'

    post:
      summary: 상품 등록
      tags: [Products]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: 생성 완료

  /products/{id}:
    put:
      summary: 상품 수정
      tags: [Products]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: 수정 완료

    delete:
      summary: 상품 삭제
      tags: [Products]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 삭제 완료

  /inventory/inbound:
    post:
      summary: 입고 등록
      tags: [Inventory]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  type: string
                quantity:
                  type: integer
                note:
                  type: string
      responses:
        '201':
          description: 입고 처리 완료

  /inventory/outbound:
    post:
      summary: 출고 등록
      tags: [Inventory]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  type: string
                quantity:
                  type: integer
                note:
                  type: string
      responses:
        '201':
          description: 출고 처리 완료

  /inventory:
    get:
      summary: 입출고 이력 조회
      tags: [Inventory]
      security:
        - bearerAuth: []
      parameters:
        - name: start_date
          in: query
          schema:
            type: string
            format: date
        - name: end_date
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: 이력 리스트
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InventoryLog'

  /alerts:
    get:
      summary: 알림 목록 조회
      tags: [Alerts]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 알림 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Alert'

  /alerts/{id}/read:
    patch:
      summary: 알림 읽음 처리
      tags: [Alerts]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 읽음 처리 완료

